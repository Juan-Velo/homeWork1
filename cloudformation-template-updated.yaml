AWSTemplateFormatVersion: "2010-09-09"
Description: "Plantilla para crear una Maquina Virtual en EC2 usando una AMI especifica (Cloud9Ubuntu22-2025-03-26T13-17)"

Parameters:
  InstanceName:
    Type: String
    Default: "MV API NodeJS"
    Description: "Nombre de la instancia a crear"
  AMI:
    Type: String
    Default: "ami-08d434e92c0cfa0c0"
    Description: "ID de AMI"

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Ref InstanceName
      ImageId: !Ref AMI
      InstanceType: "t3.micro"
      KeyName: "vockey"
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: "20"

  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Permitir trafico SSH, HTTP y Node.js API desde cualquier lugar"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
          Description: "SSH access"
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
          Description: "HTTP access"
        - IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: "0.0.0.0/0"
          Description: "HTTPS access"
        - IpProtocol: "tcp"
          FromPort: "3000"
          ToPort: "3000"
          CidrIp: "0.0.0.0/0"
          Description: "Node.js API access"

Outputs:
  InstanceId:
    Description: "ID de la instancia EC2"
    Value: !Ref EC2Instance
  InstancePublicIP:
    Description: "IP publica de la instancia"
    Value: !GetAtt EC2Instance.PublicIp
  APIEndpoint:
    Description: "Endpoint de la API Node.js"
    Value: !Sub "http://${EC2Instance.PublicIp}:3000"
  SSHCommand:
    Description: "Comando para conectar via SSH"
    Value: !Sub "ssh -i vockey.pem ubuntu@${EC2Instance.PublicIp}"
